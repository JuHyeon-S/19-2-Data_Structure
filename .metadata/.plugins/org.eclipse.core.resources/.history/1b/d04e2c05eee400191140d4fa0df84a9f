package day5;

import java.util.NoSuchElementException;

public class SListOrder<E> {
	protected Node head;
	private int size;

	public SListOrder() {
		head = null;
		size = 0;
	}

	public int search(E target) {
		Node p = head;
		for (int k = 0; k < size; k++) {
			if (target == p.getItem()) return k;
			p = p.getNext();
		}
		return -1;
	}
	
	public void insertFront(E newItem) {
		head = new Node(newItem, head);
		size++;
	}
	
	public void insertAfter(E newItem, Node p) {
		p.setNext(new Node(newItem, p.getNext()));
		size++;
	}
	
	public void deleteFront() {
		if (size == 0) throw new NoSuchElementException();
		head = head.getNext();
		size--;
	}
	
	public void deleteAfter(Node p) {
		if (p == null) throw new NoSuchElementException();
		Node t = p.getNext();
		p.setNext(t.getNext());
		t.setNext(null);
		size--;
	}
	
	public void print() {
		Node p = head;
		p =p.getNext();
		for (int i = 0; i < size; i++) {
			System.out.print(p.getItem() + "\t");
			p = p.getNext();
		}
	}
	
	public int size() {
		return size;
	}
	
	public void setAndOrderNodes(int[] arr) {
		if (arr != null) {
			while(size != 0) {
				deleteFront();
			}
		}
		int i = 0;
		Node p = new Node((E)(Object)arr[i++],head);
		p.setNext(p.getNext());
		System.out.println(arr.length);
		Node q = head;

		
		/*
		while(i < arr.length) {System.out.println(i);
			if ((int)p.getItem() > arr[i]) {
				insertFront((E)(Object)arr[i]);
				System.out.print(arr[i] +" "+p.getItem()+ " 1\t");
			}
			else {
				insertAfter((E)(Object)arr[i], p);
				System.out.print(arr[i] + " 2\t");
			}
			System.out.println();
			for(int j=0;j < size;j++) {
				Node g = head;
				System.out.print(g.getItem() + "\t"+ size+" s\t");
				g = g.getNext();
			}
			System.out.println();
			i++;
		}*/
		
		for (i = 0; i < arr.length;i++) {
			if (p.getItem() == null) {
				p.setItem((E)(Object)arr[i]);
			}
			else if ((int)p.getItem() >= arr[i]) {
				insertFront((E)(Object)arr[i]);
				System.out.print(arr[i] + " 1\t");
			}
			else {
				insertAfter((E)(Object)arr[i], p);
				System.out.print(arr[i] + " 2\t");
			}
			
		}
	}
	
	public void join(SListOrder slist2) {
		
	}
}
